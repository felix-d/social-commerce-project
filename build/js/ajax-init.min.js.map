{"version":3,"sources":["ajax-init.js"],"names":["getCookie","name","cookieValue","document","cookie","cookies","split","i","length","jQuery","trim","substring","decodeURIComponent","csrfSafeMethod","method","test","csrftoken","$","ajaxSetup","beforeSend","xhr","settings","type","this","crossDomain","setRequestHeader"],"mappings":"AAAA,YAGA,SAASA,WAAUC,GACjB,GAAIC,GAAc,IAClB,IAAIC,SAASC,QAA6B,IAAnBD,SAASC,OAE9B,IAAK,GADDC,GAAUF,SAASC,OAAOE,MAAM,KAC3BC,EAAI,EAAGA,EAAIF,EAAQG,OAAQD,IAAK,CACvC,GAAIH,GAASK,OAAOC,KAAKL,EAAQE,GADM,IAGnCH,EAAOO,UAAU,EAAGV,EAAKO,OAAS,IAAOP,EAAO,IAAM,CACxDC,EAAcU,mBAAmBR,EAAOO,UAAUV,EAAKO,OAAS,GAChE,QAIN,MAAON,GAGT,QAASW,gBAAeC,GAEtB,MAAQ,6BAA6BC,KAAKD,GAG5C,GAAIE,WAAYhB,UAAU,YAC1BiB,GAAEC,WACAC,WAAY,SAASC,EAAKC,GACnBR,eAAeQ,EAASC,OAAUC,KAAKC,aAC1CJ,EAAIK,iBAAiB,cAAeT","file":"ajax-init.min.js","sourcesContent":["// We want to set the Cross Site Request Forgery token on each request\n// https://docs.djangoproject.com/en/1.7/ref/contrib/csrf/#ajax\n//**************************************************************\nfunction getCookie(name) {\n  var cookieValue = null;\n  if (document.cookie && document.cookie != '') {\n    var cookies = document.cookie.split(';');\n    for (var i = 0; i < cookies.length; i++) {\n      var cookie = jQuery.trim(cookies[i]);\n      // Does this cookie string begin with the name we want?\n      if (cookie.substring(0, name.length + 1) == (name + '=')) {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n}\n\nfunction csrfSafeMethod(method) {\n  // these HTTP methods do not require CSRF protection\n  return (/^(GET|HEAD|OPTIONS|TRACE)$/.test(method));\n}\n\nvar csrftoken = getCookie('csrftoken');\n$.ajaxSetup({\n  beforeSend: function(xhr, settings) {\n    if (!csrfSafeMethod(settings.type) && !this.crossDomain) {\n      xhr.setRequestHeader(\"X-CSRFToken\", csrftoken);\n    }\n  }\n});\n"],"sourceRoot":"/source/"}